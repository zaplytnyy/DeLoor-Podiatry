{"version":3,"file":"component---src-pages-providers-js-ea01d364cecf3fb60a34.js","mappings":"gLAAO,MAAMA,EAAQ,CACjBC,QAAS,2BCDAC,EAAiB,CAACC,EAAQC,EAAWC,KAC9C,IAAKF,EACD,KAAM,iFAEV,IAAKC,EACD,KAAM,wEAEV,IAAKC,EACD,KAAM,mFAEV,OAAO,CAAI,ECVR,MAAMC,EACTC,YAAYC,GACRC,KAAKC,OAASF,EAAaE,OAC3BD,KAAKE,KAAOH,EAAaI,YAC7B,ECFG,MAAMC,EAAW,CAACC,EAAKC,EAAMC,EAAU,CAAC,IACpC,IAAIC,SAAQ,CAACC,EAASC,KACzB,MAAMC,EAAM,IAAIC,eAChBD,EAAIE,iBAAiB,QAAQ,EAAGC,aAC5B,MAAMC,EAAiB,IAAIlB,EAAsBiB,GACnB,MAA1BC,EAAed,QAA0C,OAAxBc,EAAeb,KAChDO,EAAQM,GAGRL,EAAOK,EACX,IAEJJ,EAAIE,iBAAiB,SAAS,EAAGC,aAC7BJ,EAAO,IAAIb,EAAsBiB,GAAQ,IAE7CH,EAAIK,KAAK,OAAQzB,EAAMC,QAAUa,GAAK,GACtCY,OAAOC,KAAKX,GAASY,SAASC,IAC1BT,EAAIU,iBAAiBD,EAAKb,EAAQa,GAAK,IAE3CT,EAAIW,KAAKhB,EAAK,ICjBtB,MCoBwB,CAACX,EAAWC,EAAY2B,EAAM7B,KAClD,MAAM8B,EAAM9B,GAAUH,EAAMkC,QACtBC,EAvBW,CAACH,IAClB,IAAIG,EAOJ,GALIA,EADgB,iBAATH,EACOI,SAASC,cAAcL,GAGvBA,GAEbG,GAAwC,SAAzBA,EAAYG,SAC5B,KAAM,0FAEV,OAAOH,CAAW,EAYEI,CAAaP,GACjC9B,EAAe+B,EAAK7B,EAAWC,GAC/B,MAAMmC,EAAW,IAAIC,SAASN,GAK9B,OAJAK,EAASE,OAAO,cAAe,SAC/BF,EAASE,OAAO,aAActC,GAC9BoC,EAASE,OAAO,cAAerC,GAC/BmC,EAASE,OAAO,UAAWT,GACpBpB,EAAS,4BAA6B2B,EAAS,E,UC7B3C,SAASG,IActB,OACE,gBAACC,EAAA,EAAM,CAACC,UAAQ,GACd,2BAASC,GAAG,QACR,8BACE,0BAAI,kBACJ,yBAAG,YAEH,2BAASC,UAAU,kBACf,wBAAMA,UAAU,eAAeC,SApB7C,SAAmBC,GACjBA,EAAEC,iBAEFC,EAAiB,kBAAmB,mBAAoBF,EAAE1B,OAAQ,qBAC/D6B,MAAMC,IACW,oBAANC,QACVA,OAAOC,SAASC,QAAS,IACvBC,IACAC,QAAQC,IAAIF,EAAM9C,KAAK,GAE/B,GAYkB,yBAAOoC,UAAU,cAAa,QAC9B,yBAAOA,UAAU,aAAaa,KAAK,OAAOC,KAAK,cAE/C,yBAAOd,UAAU,cAAa,SAC9B,yBAAOA,UAAU,aAAaa,KAAK,QAAQC,KAAK,eAEhD,yBAAOd,UAAU,cAAa,gBAC9B,yBAAOA,UAAU,aAAaa,KAAK,OAAOC,KAAK,YAE/C,yBAAOd,UAAU,cAAa,YAC9B,yBAAOA,UAAU,aAAaa,KAAK,OAAOC,KAAK,cAE/C,yBAAOd,UAAU,cAAa,iBAC9B,yBAAOA,UAAU,aAAaa,KAAK,OAAOC,KAAK,SAE/C,yBAAOd,UAAU,cAAa,OAC9B,yBAAOA,UAAU,aAAaa,KAAK,OAAOC,KAAK,SAE/C,yBAAOd,UAAU,kBAAkBa,KAAK,SAASE,MAAM,YAO3E,C","sources":["webpack://deloorpodiatry/./node_modules/emailjs-com/es/store/store.js","webpack://deloorpodiatry/./node_modules/emailjs-com/es/utils/validateParams.js","webpack://deloorpodiatry/./node_modules/emailjs-com/es/models/EmailJSResponseStatus.js","webpack://deloorpodiatry/./node_modules/emailjs-com/es/api/sendPost.js","webpack://deloorpodiatry/./node_modules/emailjs-com/es/index.js","webpack://deloorpodiatry/./node_modules/emailjs-com/es/methods/sendForm/sendForm.js","webpack://deloorpodiatry/./src/pages/Providers.js"],"sourcesContent":["export const store = {\n    _origin: 'https://api.emailjs.com',\n};\n","export const validateParams = (userID, serviceID, templateID) => {\n    if (!userID) {\n        throw 'The user ID is required. Visit https://dashboard.emailjs.com/admin/integration';\n    }\n    if (!serviceID) {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID) {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n    return true;\n};\n","export class EmailJSResponseStatus {\n    constructor(httpResponse) {\n        this.status = httpResponse.status;\n        this.text = httpResponse.responseText;\n    }\n}\n","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = (url, data, headers = {}) => {\n    return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.addEventListener('load', ({ target }) => {\n            const responseStatus = new EmailJSResponseStatus(target);\n            if (responseStatus.status === 200 || responseStatus.text === 'OK') {\n                resolve(responseStatus);\n            }\n            else {\n                reject(responseStatus);\n            }\n        });\n        xhr.addEventListener('error', ({ target }) => {\n            reject(new EmailJSResponseStatus(target));\n        });\n        xhr.open('POST', store._origin + url, true);\n        Object.keys(headers).forEach((key) => {\n            xhr.setRequestHeader(key, headers[key]);\n        });\n        xhr.send(data);\n    });\n};\n","import { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm };\nexport default {\n    init,\n    send,\n    sendForm,\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\nconst findHTMLForm = (form) => {\n    let currentForm;\n    if (typeof form === 'string') {\n        currentForm = document.querySelector(form);\n    }\n    else {\n        currentForm = form;\n    }\n    if (!currentForm || currentForm.nodeName !== 'FORM') {\n        throw 'The 3rd parameter is expected to be the HTML form element or the style selector of form';\n    }\n    return currentForm;\n};\n/**\n * Send a form the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {string | HTMLFormElement} form - the form element or selector\n * @param {string} userID - the EmailJS user ID\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const sendForm = (serviceID, templateID, form, userID) => {\n    const uID = userID || store._userID;\n    const currentForm = findHTMLForm(form);\n    validateParams(uID, serviceID, templateID);\n    const formData = new FormData(currentForm);\n    formData.append('lib_version', '3.2.0');\n    formData.append('service_id', serviceID);\n    formData.append('template_id', templateID);\n    formData.append('user_id', uID);\n    return sendPost('/api/v1.0/email/send-form', formData);\n};\n","import React from 'react';\nimport emailjs from 'emailjs-com';\nimport Layout from '../components/Layout';\n\nexport default function ContactUs() {\n\n  function sendEmail(e) {\n    e.preventDefault();\n\n    emailjs.sendForm('service_0chynl7', 'template_16jwiip', e.target, 'EGNQWEE6BAcALUqlj')\n      .then((result) => {\n        if(typeof window !== `undefined`){\n        window.location.reload();}\n      }, (error) => {\n          console.log(error.text);\n      });\n  }\n\n  return (\n    <Layout fullMenu>\n      <article id=\"main\">\n          <header>\n            <h2>Online Booking</h2>\n            <p>Message</p>\n          </header>\n            <section className=\"wrapper style5\">\n                <form className=\"contact-form\" onSubmit={sendEmail}>\n\n                    <label className='form-child'>Name</label>\n                    <input className='form-child' type=\"text\" name=\"user_name\" />\n\n                    <label className='form-child'>Email</label>\n                    <input className='form-child' type=\"email\" name=\"user_email\" />\n\n                    <label className='form-child'>Phone Number</label>\n                    <input className='form-child' type=\"text\" name=\"contact\" />\n\n                    <label className='form-child'>Isurance</label>\n                    <input className='form-child' type=\"text\" name=\"insurance\" />\n\n                    <label className='form-child'>Isurance Plan</label>\n                    <input className='form-child' type=\"text\" name=\"plan\" />  \n\n                    <label className='form-child'>DOB</label>\n                    <input className='form-child' type=\"date\" name=\"date\" />  \n\n                    <input className='form-child send' type=\"submit\" value=\"Send\" />\n\n                </form>\n            </section>\n      </article>\n  </Layout>\n  );\n}"],"names":["store","_origin","validateParams","userID","serviceID","templateID","EmailJSResponseStatus","constructor","httpResponse","this","status","text","responseText","sendPost","url","data","headers","Promise","resolve","reject","xhr","XMLHttpRequest","addEventListener","target","responseStatus","open","Object","keys","forEach","key","setRequestHeader","send","form","uID","_userID","currentForm","document","querySelector","nodeName","findHTMLForm","formData","FormData","append","ContactUs","Layout","fullMenu","id","className","onSubmit","e","preventDefault","emailjs","then","result","window","location","reload","error","console","log","type","name","value"],"sourceRoot":""}